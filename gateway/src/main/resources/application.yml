
logging:
  level:
    root: INFO
#    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
#    org.springframework.cloud.gateway: TRACE
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE
#    org.springframework.security.web: DEBUG
#    org.springframework.http.server.reactive: TRACE
#    org.springframework.web.reactive: TRACE
#    org.springframework.boot.autoconfigure.web: DEBUG
#    reactor.netty: DEBUG

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

server:
  port: 8090

jasypt:
  encryptor:
    bean: jasyptStringEncryptor

base-url: "http://localhost:8090"

logout-success-url: "/main/MainPage"

spring:
  application:
    name: gateway
  profiles:
    include: management

# http://localhost:9080/realms/careeasy/well-known/openid-configuration
#  security.oauth2.resourceserver.jwt.jwk-set-uri: http://${app.auth-server}:9000/.well-known/jwks.json
  security:
    oauth2:
      client:
        provider:
          hmg-id:
            issuer-uri: https://stg-account.hyundaimotorgroup.com

        registration:
          hmg-id:
            client-id: hmg-kr-globalev
            client-secret: mqywx3tj2bkYgqczYLqPn1e5AewmpWAVNz64vIhnL2Xfx9KCBWCodYOV6GcdgwKn
            authorization-grant-type: authorization_code
#            redirect-uri: http://test.com/login/oauth2/code/hmg-id
            redirect-uri: http://test.com
            clientAuthenticationMethod: client_secret_basic
            scope: openid, email, phone, address, name, profile
            provider: hmg-id

  cloud:
    gateway:
      default-filters:
        - TokenRelay
#        - CircuitBreaker=myCircuitBreaker
      enabled: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
#          predicates:
#            - name: Path
#              args:
#                pattern: "'/services/'+serviceId.toLowerCase()+'/**'"
#          filters:
#            - name: RewritePath
#              args:
#                regexp: "'/services/'+serviceId.toLowerCase()+'/(?<remaining>.*)'"
#                replacement: "'/${remaining}'"
      httpclient:
        pool:
          max-connections: 1000
      routes:
        - id: member
          uri: http://localhost:8080
          predicates:
            - Path=/api/emsp/member/**
          filters:
            - AddRequestHeader=X-TenantID, public

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include:
          [
            'configprops',
            'env',
            'health',
            'info',
            'logfile',
            'loggers',
            'prometheus',
            'threaddump',
          ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true
